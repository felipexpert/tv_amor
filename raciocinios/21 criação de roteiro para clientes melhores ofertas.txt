Como vai ser a animação?
	Personagens conversando, nesse primeiro momento, falando sobre a empresa
	
	
Vai ter logo?
	Vou por os logos nos cantos superiores, para quando eu querer fazer os personagens entrarem andando no cenário, eles não "passarem" pelos logos

Vai ter alguma vinhetinha bacana, tipo a que eu fazia com After Effects? Inicialmente não

Como vai ser o background? Qual vai ser a dimensão dos vídeos, vai seguir um padrão? 1080x1350?
	Vai ser 1080x1920, contudo vou centralizar em 1080x1350
		Como vou fazer esta marcação?
			- O posicionamento é simples. Você cria uma variação do background com a marcação 1080x1350, posiciona os 2 personagens, e anota a posição de ambos no arquivo de configuração
			
	
-Background: Encontre uma foto da fachada ou interiores da empresa do cliente
-Utilize a ferramenta para transformar em uma bela ilustração 1080x1920 


Roteiro:
-Quais ideias ou procedimentos posso criar para os roteiros?
	IDEIA:
		Reunia informações sobre a empresa, o máximo de informações 
____________________________

Versão 1
Criar um prompt para a ITec me ajudar com o roteiro:
	Faça um roteiro do personagem "Melhores Ofertas" conversando com o personagem "x" da empresa "y". O assunto do vídeo é "z". O vídeo deve ter em torno de 30 segundos. A seguir disponibilizo alguns textos sobre a empresa "y" para ajudar na criação do roteiro: "<textos-sobre-o-cliente>"
____________________________

Versão 2 (com orientações da ITec)

# Parte 1: Geração de Valor - Duração Aproximada de 30 segundos

Crie um roteiro de vídeo para redes sociais, com o personagem chamado "Melhores Ofertas" conversando com o personagem 'x' da empresa 'y'.
O assunto do vídeo é 'z'.
O vídeo deve ter aproximadamente 30 segundos, com em torno de 4 falas curtas, cada fala com aproximadamente 5 a 10 segundos de duração.
O roteiro deve incluir:
1. Saudação inicial (apresentando o personagem e a empresa 'y')
2. O assunto do vídeo

A seguir estão alguns textos sobre a empresa 'y' para ajudar na criação do roteiro:

```
<textos-sobre-o-cliente>
```

Caso o texto sobre o cliente seja pequeno, complemente com os benefícios associados ao nicho e características do cliente 

O tom do vídeo deve ser amigável, natural e engajador, adequado para Instagram Reels, TikTok e Shorts.

# Parte 2: Finalização com CTA

Um fechamento curto narrado pelo personagem "Melhores Ofertas", focado em CTA para obter prova social, a seguir alguns exemplos de CTAs:

```
1. Já conhece a [empresa]? Conta pra gente nos comentários como foi sua experiência!
2. Se você também ama os serviços da [empresa], deixe seu comentário aqui e ajude outros a descobrirem também!
3. Compartilhe nos comentários o que você mais gosta da [empresa]! Sua opinião ajuda outras pessoas!
4. Já teve uma experiência bacana com a [empresa]? Comente abaixo e inspire outros clientes a conhecerem também!
5. Queremos saber: qual foi a sua experiência com a [empresa]? Deixe seu comentário e inspire os outros clientes!
6. Mostre o seu apoio! Comente elogiando a [empresa]!
```

Este é o formato de cada narração que você deve criar, crie por favor 5 narrações distintas neste formato

O formato que você vai entregar a animação, será um Tipo Haskell, o Episode. A seguir o código fonte de Episode.hs

Episode.hs:
```
{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DeriveAnyClass #-}

-- MyModule.hs
module Model.Episode where

import qualified Data.Text as T
import Data.Text (Text)
import GHC.Generics (Generic) 

import Model.EpisodePersona (EPeLabel(..), EPeNumber(..))

import qualified Data.List as List

import Data.Aeson (ToJSON, FromJSON)


-- O episódio completo (lista de blocos)
-- NOTA: Posso fazer validação, aceita 1 ou 2 personas, e no eDialogueBlock, aceita apenas
-- EPeLabel que estão na lista de ePes
data Episode = Episode 
    { ePes :: [EPeLabel] -- Lista de personagens que participam do episódio
    , eDialoguePeList :: [EDialoguePe] -- Lista de blocos de fala
    } deriving (Show, Eq, Generic)

episodePeNumber :: Episode -> EPeLabel -> EPeNumber
episodePeNumber episode label = peNumber
    where 
        indexOpt :: Maybe Int
        indexOpt = List.findIndex sameLabel (ePes episode)
            where 
                sameLabel :: EPeLabel -> Bool
                sameLabel = (== label) 
        peNumber :: EPeNumber
        peNumber = case indexOpt of
            Just 0 -> EPeNum1
            Just 1 -> EPeNum2
            _      -> EPeNum1 -- Default, caso não encontre, retorna EPeNum1

-- Um bloco de fala, associado a um personagem
data EDialoguePe = EDialoguePe
    { dPe :: EPeLabel
    , dContents :: [DRichText]
    } deriving (Show, Eq)

-- Um trecho de texto com comandos embutidos
data DRichText
    = RPlainText Text
    | RCommand RCCommand
    deriving (Show, Eq)

-- Representa os comandos embutidos no texto
data RCCommand 
    -- ERTCGesture tem quem está fazendo o gesto, porque durante a fala de um, o outro pode fazer um gesto
    = CGesture
        { cGesture :: CGesture
        , cPe :: EPeLabel }
    | CPause Int -- Pausa em milissegundos
    deriving (Show, Eq)

data CGesture
    = GHi -- Aceno
    | GStandShort -- Fica com as mãos juntas, depois volta as mãos
    | GStandLong -- Fica com as mãos juntas por mais tempo, depois volta as mãos
    | GThinkShort -- Coloca a mão no queixo, reflexivo
    | GThinkLong -- Coloca a mão no queixo, reflexivo, por mais tempo
    | GTalkShort -- movimenta os braços, expressando ideias
    | GTalkLong -- movimenta os braços, expressando ideias, por mais tempo
    | GWorryShort -- demonstra um pouco de preocupação
    | GWorryLong -- demonstra um pouco de preocupação, por mais tempo
    | GShakeLegShort -- balança um pouco a perna
    | GShakeLegLong -- balança um pouco a perna, por mais tempo
    | GExcited -- fica animado!
    | GDance -- Dança de alegria (um pouco exagerado, não utilize tanto esse)
    | GDefault -- Este não precisa utilziar, por padrão, onde não tem ação, aplica-se esse automaticamente
    deriving (Show, Eq, Generic, ToJSON)

exampleEpisode :: Episode
exampleEpisode = Episode
    { ePes = [EPeLabel "pe_felipe", EPeLabel "pe_fatima"]
    , eDialoguePeList = exampleDialogues
    }
    where
        exampleDialogues :: [EDialoguePe]
        exampleDialogues =
            [ EDialoguePe
                { dPe = EPeLabel "pe_felipe"
                , dContents =
                    [ RPlainText "Olá Fatima"
                    , RCommand (CGesture GHi (EPeLabel "pe_felipe"))
                    , RCommand (CGesture GHi (EPeLabel "pe_fatima"))
                    , RCommand (CPause 500)
                    , RPlainText "Tudo bem por aí?"
                    ]
                }
            , EDialoguePe
                { dPe = EPeLabel "pe_fatima"
                , dContents =
                    [ RPlainText "Olá Felipe! Tudo ótimo!"
                    , RCommand (CGesture GHi (EPeLabel "pe_fatima")) ]
                }
            ]
episode01 :: Episode
episode01 = undefined -- crie o 1º episode aqui

episode02 :: Episode
episode02 = undefined -- crie o 2º episode aqui

episode03 :: Episode
episode03 = undefined -- crie o 3º episode aqui

episode04 :: Episode
episode04 = undefined -- crie o 4º episode aqui

episode05 :: Episode
episode05 = undefined -- crie o 5º episode aqui
```

Capriche nos gestos, não precisa "forçar"... Forneça SOMENTE `episode01`, `episode02`, `episode03`, `episode04` e `episode05`

____________________________

Algumas CTAs de prova social

1. Já conhece a [empresa]? Conta pra gente nos comentários como foi sua experiência!
2. Se você também ama os serviços da [empresa], deixe seu comentário aqui e ajude outros a descobrirem também!
3. Compartilhe nos comentários o que você mais gosta da [empresa]! Sua opinião ajuda outras pessoas!
4. Já teve uma experiência bacana com a [empresa]? Comente abaixo e inspire outros clientes a conhecerem também!
5. Queremos saber: qual foi a sua experiência com a [empresa]? Deixe seu comentário e inspire os outros clientes!
6. Mostre o seu apoio! Comente elogiando a [empresa]!

____________________________

Por favor, reúna tudo sobre a empresa "x", situada no endereço "y", com o contato "z", crie um texto informativo para eu ter um bom conhecimento sobre o negócio. cuidado para não misturar informações de outra empresa com o mesmo nome! Por isso informei o endereço e o telefone, para você conferir. Evite falar de doações, se concentre em coisas focadas no benefício que o cliente final vai perceber

____________________________

Ter uma ideia para quando o cliente não ter muitas informações disponíveis online


Quando eu tiver poucos textos do cliente, como vou criar assuntos bons para as animações?
- no arquivo do resumo do cliente adicione os "nicho e características adicionais"